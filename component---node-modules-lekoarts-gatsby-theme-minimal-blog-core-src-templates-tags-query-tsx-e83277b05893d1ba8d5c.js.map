{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tags-query-tsx-e83277b05893d1ba8d5c.js","mappings":"8RAyCA,MAxBaA,IAA4B,IAA3B,KAAEC,GAAmBD,EACjC,MAAM,SAAEE,EAAQ,SAAEC,IAAaC,EAAAA,EAAAA,KAE/B,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAM,MACLD,EAAAA,EAAAA,GAACE,EAAAA,GAAO,CAACC,GAAG,KAAKC,QAAQ,aAAY,SAGrCJ,EAAAA,EAAAA,GAACK,EAAAA,GAAG,CAACC,GAAI,CAAC,EAAG,IACVV,EAAKW,IAAKC,IACTR,EAAAA,EAAAA,GAACS,EAAAA,GAAI,CAACC,IAAKF,EAASG,WAAYC,GAAI,CAAC,EAAG,EAAG,GAAIC,GAAI,CAAEC,WAAW,YAC9Dd,EAAAA,EAAAA,GAACe,EAAAA,KAAI,CACHF,GAAKG,IAAC,IAAAC,EAAA,OAAAC,OAAAC,OAAA,GAAmB,QAAnBF,EAAWD,EAAEI,cAAM,IAAAH,OAAA,EAARA,EAAUI,EAAE,CAACjB,QAAQ,iBAAmBkB,GAAI,KAC7DC,IAAIC,EAAAA,EAAAA,GAAe,IAAI1B,EAAQ,IAAID,EAAQ,KAAI4B,EAAAA,EAAAA,IAAUjB,EAASG,cAEjEH,EAASG,WAAW,KAACX,EAAAA,EAAAA,GAAA,QAAMa,GAAI,CAAEa,MAAM,cAAgB,IAAElB,EAASmB,WAAW,WAWrF,MAAMC,EAAeA,KAAM5B,EAAAA,EAAAA,GAAC6B,EAAAA,EAAG,CAACC,MAAM,SCxC7C,MCYe,SAA4BnC,GAAuB,IAAjBoC,EAAKb,OAAAC,OAAA,KAAAa,EAAAA,EAAAA,GAAArC,GAAAA,IACpD,MACEsC,MAAM,QAAEC,IACNH,EAEJ,OAAOI,EAAAA,cAACC,EAAIlB,OAAAC,OAAA,CAACvB,KAAMsC,EAAQG,OAAWN,GACxC,C","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tags-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tags.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Box, Flex } from \"theme-ui\"\n// @ts-ignore\nimport { kebabCase } from \"@lekoarts/themes-utils\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Seo from \"./seo\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\nexport type MBTagsProps = {\n  list: {\n    fieldValue: string\n    totalCount: number\n  }[]\n}\n\nconst Tags = ({ list }: MBTagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Heading as=\"h1\" variant=\"styles.h1\">\n        Tags\n      </Heading>\n      <Box mt={[4, 5]}>\n        {list.map((listItem) => (\n          <Flex key={listItem.fieldValue} mb={[1, 1, 2]} sx={{ alignItems: `center` }}>\n            <Link\n              sx={(t) => ({ ...t.styles?.a, variant: `links.listItem`, mr: 2 })}\n              to={replaceSlashes(`/${basePath}/${tagsPath}/${kebabCase(listItem.fieldValue)}`)}\n            >\n              {listItem.fieldValue} <span sx={{ color: `secondary` }}>({listItem.totalCount})</span>\n            </Link>\n          </Flex>\n        ))}\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const Head: HeadFC = () => <Seo title=\"Tags\" />\n","import { graphql } from \"gatsby\"\nimport TagsComponent, { Head } from \"../components/tags\"\n\nexport default TagsComponent\n\nexport { Head }\n\nexport const query = graphql`\n  {\n    allPost(sort: { tags: { name: DESC } }) {\n      group(field: { tags: { name: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Tags, { Head } from \"../../../components/tags\"\n\ntype Props = {\n  data: {\n    allPost: {\n      group: {\n        fieldValue: string\n        totalCount: number\n      }[]\n    }\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTags({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tags list={allPost.group} {...props} />\n}\n\nexport { Head }\n"],"names":["_ref","list","tagsPath","basePath","useMinimalBlogConfig","jsx","Layout","Heading","as","variant","Box","mt","map","listItem","Flex","key","fieldValue","mb","sx","alignItems","Link","t","_t$styles","Object","assign","styles","a","mr","to","replaceSlashes","kebabCase","color","totalCount","Head","Seo","title","props","_objectDestructuringEmpty","data","allPost","React","Tags","group"],"sourceRoot":""}