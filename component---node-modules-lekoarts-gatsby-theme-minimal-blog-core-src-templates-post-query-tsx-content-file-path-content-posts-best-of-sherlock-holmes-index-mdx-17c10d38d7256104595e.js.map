{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-best-of-sherlock-holmes-index-mdx-17c10d38d7256104595e.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./content/posts/best-of-sherlock-holmes/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ol: \"ol\",\n    li: \"li\",\n    h3: \"h3\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"A man's brain originally is like a little empty attic, and you have to stock it with such furniture as you choose. A fool takes in all the lumber of every sort that he comes across, so that the knowledge which might be useful to him gets crowded out, or at best is jumbled up with a lot of other things so that he has a difficulty in laying his hands upon it. Now, the skilful workman is very careful indeed as to what he takes into his brain-attic. He will have nothing but the tools which may help him in doing his work, but of these he has a large assortment, and all in the most perfect order.\"), \"\\n\", React.createElement(_components.li, null, \"In solving a problem of any sort, the grand thing is to be able to reason backwards.\"), \"\\n\", React.createElement(_components.li, null, \"A change of work is the best rest. To a great mind, nothing is little.\"), \"\\n\", React.createElement(_components.li, null, \"The ideal reasoner would, when he had once been shown a single fact in all its bearings, deduce from it, not only all the chain of events which led up to it, but also all the results which would follow from it. As Cuvier could correctly describe a whole animal by the contemplation of a single bone, so the observer who has thoroughly understood one link in a series of incidents should be able to accurately state all the other ones, both before and after.\"), \"\\n\", React.createElement(_components.li, null, \"To carry the art of solving problems, however, to its highest pitch, it is necessary that the reasoner should be able to utilize all the facts which have come to his knowledge; and this in itself implies a possession of all knowledge, which, even in these days of free education and encyclopedieas, is a somewhat rare accomplishment.\"), \"\\n\", React.createElement(_components.li, null, \"A man should keep his little brain-attic stocked with all the furniture that he is likely to use, and the rest he can put away in the lumber room of his library, where he can get it if he wants it.\"), \"\\n\", React.createElement(_components.li, null, \"It is an old maxim that when you have excluded / eliminated all which is impossible, whatever remains, however improbable, must be the truth.\"), \"\\n\", React.createElement(_components.li, null, \"It is of the highest importance in the art of detection to be able to recognize, out of a number of facts, which are incidental and which vital. Otherwise your energy and attention must be dissipated instead of being concentrated.\"), \"\\n\", React.createElement(_components.li, null, \"To the logician, all things should be seen exactly as they are, and to underestimate one's self is as much as a departure from truth as to exaggerate one's own powers.\"), \"\\n\", React.createElement(_components.li, null, \"It is not really difficult to construct a series of inferences, each dependent upon its predecessor and each simple in itself. If, after doing so, one simply knocks out all the central inferences and presents one's audience with the starting point and the conclusion, one may produce a startling, though possibly a meretricious, effect.\"), \"\\n\", React.createElement(_components.li, null, \"One of the important rules of criminal investigation: one should always look for a possible alternative, and provide against it.\"), \"\\n\", React.createElement(_components.li, null, \"The more outre and grotesque an incident is, the more carefully it deserves to be examined, and the very point which appears to complicate a case is, when duly considered and scientifically handled, the one which is most likely to elucidate it.\"), \"\\n\", React.createElement(_components.li, null, \"You'll get results by always putting yourself in the other fellow's place, and thinking what you would do yourself; it takes some imagination, but it pays.\"), \"\\n\", React.createElement(_components.li, null, \"Mediocrity knows nothing higher than itself; but talent instantly recognizes genius.\"), \"\\n\", React.createElement(_components.li, null, \"Crime is common. Logic is rare. Therefore it is upon the logic rather than upon the crime that you should dwell.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Credits and Attributions:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Canon of Sherlock Holmes by Sir Arthur Conan Doyle\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/runner/work/ruminations/ruminations/content/posts/best-of-sherlock-holmes/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Object","assign","_objectDestructuringEmpty","Post","_createMdxContent","_components","ol","li","h3","ul","_provideComponents","components","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name"],"sourceRoot":""}