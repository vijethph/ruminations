{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-a587fb433378308b94f4.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\"\n  }, _provideComponents(), props.components), {Text} = _components;\n  if (!Text) _missingMdxReference(\"Text\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    sx: {\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }, React.createElement(_components.p, null, \"Hi there ðŸ‘‹\")), \"\\n\", React.createElement(_components.p, null, \"I am a student at University College Dublin.\", React.createElement(_components.br), \"\\n\", \"This is my personal blog. It also has a collection of helpful reference stuff, compiled when I am browsing the internet.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\"\n  }, _provideComponents(), props.components), {Title} = _components;\n  if (!Title) _missingMdxReference(\"Title\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Title, {\n    text: \"Food for thought\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Start where you are. Use what you have. Do what you can.\\nChallenges are what makes life interesting, and overcoming them is what makes life meaningful.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\nimport Seo from \"./seo\"\nimport Hero from \"../texts/hero.mdx\"\nimport Bottom from \"../texts/bottom.mdx\"\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n\nexport const Head: HeadFC = () => <Seo />\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","_createMdxContent","props","_components","Object","assign","p","br","_provideComponents","components","Text","id","component","Error","_missingMdxReference","React","fontSize","fontWeight","color","wrapper","MDXLayout","blockquote","Title","text","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","Layout","visuallyHidden","mt","Hero","Link","to","replaceSlashes","Listing","showTags","List","Bottom","Head","Seo","_objectDestructuringEmpty","data","allPost","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","_t$styles","styles","name","post","Box","title","date","ItemTags","className","BlogListItem"],"sourceRoot":""}