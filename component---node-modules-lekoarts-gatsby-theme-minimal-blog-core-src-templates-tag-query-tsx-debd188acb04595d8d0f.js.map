{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-debd188acb04595d8d0f.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/tag.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Listing from \"./listing\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport Seo from \"./seo\"\n\nexport type MBTagProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n  }\n}\n\nconst Tag = ({ posts, pageContext }: MBTagProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          {pageContext.name}\n        </Heading>\n        <Link\n          sx={(t) => ({ ...t.styles?.a, variant: `links.secondary`, marginY: 2 })}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </Link>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Tag\n\nexport const Head: HeadFC<unknown, { name: string }> = ({ pageContext }) => <Seo title={`Tag: ${pageContext.name}`} />\n","import { graphql } from \"gatsby\"\nimport TagComponent, { Head } from \"../components/tag\"\n\nexport default TagComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($slug: String!, $formatString: String!) {\n    allPost(sort: { date: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Tag, { Head } from \"../../../components/tag\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: any\n  }\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTag({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tag posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["_ref","posts","pageContext","tagsPath","basePath","useMinimalBlogConfig","jsx","Layout","Flex","sx","alignItems","justifyContent","flexFlow","Heading","as","variant","marginY","name","Link","t","_t$styles","Object","assign","styles","a","to","replaceSlashes","Listing","mt","Head","_ref2","Seo","title","props","_objectDestructuringEmpty","data","allPost","React","Tag","nodes","tags","map","tag","i","key","slug","post","showTags","Box","mb","fontSize","color","date","ItemTags","className","BlogListItem"],"sourceRoot":""}